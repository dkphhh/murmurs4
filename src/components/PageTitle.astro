---
import type { CollectionKey } from "astro:content";
import { getCollection } from "astro:content";

type props = {
  category: CollectionKey;
  title: string;
};

const { category, title } = Astro.props as props;

const posts = await getCollection(category);

const allTags = [
  ...new Set(
    posts
      .filter((post) => post.data.public)
      .map((post) => post.data.tags || [])
      .flat(),
  ),
].map((tag) => tag.trim().toLowerCase());
---

<div class="flex-center gap-2">
  <h1 class="text-2xl font-bold" style="anchor-name:--anchor-1">{title}</h1>
  <button
    class="btn h-fit w-fit border-0 p-0 btn-ghost"
    popovertarget="popover-1"
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      class="lucide lucide-circle-chevron-down-icon lucide-circle-chevron-down icon-style-sm"
      ><circle cx="12" cy="12" r="10"></circle><path d="m16 10-4 4-4-4"
      ></path></svg
    >
  </button>
</div>

<div
  class="menu dropdown max-w-64 rounded-box bg-base-100 p-4 shadow-sm lg:max-w-128"
  popover
  id="popover-1"
  style="position-anchor:--anchor-1"
>
  {
    allTags.map((tag) => (
      <a href={`/tags/${tag}`} class="btn btn-ghost">
        {tag}
      </a>
    ))
  }
</div>
