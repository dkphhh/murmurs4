---
type Props = {
  currentPage: number;
  lastPage: number;
  pathName: string;
};

const { currentPage, lastPage, pathName } = Astro.props as Props;

/**
 * 根据当前页码和需要展示的murmurs总数，返回需要展示的页码列表
 * 如果不提供 murmurs 总数，就按数据库中需要展示的 murmurs 总数计算
 *
 * @export
 * @param {number} currentPage 当前页码
 * @param {number} lastPage 总页码数
 * @return {*}  {(number | "……")[]} 需要展示的页码列表
 */
function displayPageNum(
  currentPage: number,
  lastPage: number,
): (number | "……")[] {
  const pageNumList: (number | "……")[] = [];

  if (lastPage <= 7) {
    for (let i = 1; i <= lastPage; i++) {
      pageNumList.push(i);
    }
  } else if (currentPage <= 3) {
    return [1, 2, 3, 4, 5, "……", lastPage];
  } else if (currentPage >= lastPage - 2) {
    return [
      1,
      "……",
      lastPage - 4,
      lastPage - 3,
      lastPage - 2,
      lastPage - 1,
      lastPage,
    ];
  } else {
    return [
      1,
      "……",
      currentPage - 1,
      currentPage,
      currentPage + 1,
      "……",
      lastPage,
    ];
  }

  return pageNumList;
}

const pageNumList = displayPageNum(currentPage, lastPage);
---

<div class="join">
  {
    pageNumList.map((pageNum) => {
      if (pageNum === "……") {
        return (
          <button disabled class="btn-disabled btn join-item">
            ...
          </button>
        );
      } else if (pageNum === currentPage) {
        return (
          <button class="btn join-item btn-primary" disabled>
            {pageNum}
          </button>
        );
      } else {
        return (
          <a
            class="btn join-item"
            href={`/${pathName}/${pageNum === 1 ? "" : pageNum}`}
          >
            {pageNum}
          </a>
        );
      }
    })
  }
</div>
